---
id=0
title=
author=
journal=
year=
tags=
star=
problem=
interest=
hardness=
idea=
future=
comment=
other=
---
id=1
title=The life and times of a zookeeper 
author= Flavio P. Junqueira, Benjamin C. Reed  (Yahoo!)
journal= ACM Symposium on Principles of Distributed Computing (PODC, CCF B conference of Architecture)
year=2009
tags=zookeeper, single point of failure, server, real-time computing, Distributed computing, CAP theory, Paxos protocol
star=****
problem=
interest=
hardness=
idea=
future=
comment=
other=also published on 2009 ACM Symposium on Parallel Algorithms and Architectures 
---
id=2
title=ZooKeeper: wait-free coordination for internet-scale systems 
author= Patrick Hunt, Mahadev Konar, Flavio P. Junqueira, Benjamin Reed (Yahoo!)
journal=USENIX Annual Technical Conference  (ATC)
year=2010
tags=ZooKeeper, transactions per second, throughput, The Internet, State machine replication, single point of failure, server, real-time computing, Distributed computing, CAP theory, Paxos protocol, operating system, linearizability, cache, Distributed lock manager
star=****
problem=ZooKeeper, a service for coordinating processes of distributed applications
interest=Since ZooKeeper is part of critical infrastructure, ZooKeeper aims to provide a simple and high performance kernel for building more complex coordination primitives at the client. It incorporates elements from group messaging, shared registers, and distributed lock services in a replicated, centralized service. The interface exposed by Zoo-Keeper has the wait-free aspects of shared registers with an event-driven mechanism similar to cache invalidations of distributed file systems to provide a simple, yet powerful coordination service. 
hardness=
idea= The ZooKeeper interface enables a high-performance service implementation. In addition to the wait-free property, ZooKeeper provides a per client guarantee of FIFO execution of requests and linearizability for all requests that change the ZooKeeper state. These design decisions enable the implementation of a high performance processing pipeline with read requests being satisfied by local servers. 
future=
comment=We show for the target workloads, 2:1 to 100:1 read to write ratio, that ZooKeeper can handle tens to hundreds of thousands of transactions per second. This performance allows ZooKeeper to be used extensively by client applications
other=ZooKeeper is based on Paxos, but more.  Paxos 可能导致活锁，一种特殊的饥饿     https://blog.csdn.net/b0Q8cpra539haFS7/article/details/83422461
---
