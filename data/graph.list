---
id=
title=
author=
journal=
year=
tags=
star=
problem=
interest=
hardness=
idea=
future=
comment=
other=
---
id=0
title=GridGraph: Large-Scale Graph Processing on a Single Machine Using 2-Level Hierarchical Partitioning
author=Xiaowei Zhu, Wentao Han, and Wenguang Chen (Tsinghua University)
journal=ATC
year=2015
tags=GridGraph, graph processing, graph computing, single machine, 2-level Hierarchical Partitioning, graph Partition, dual sliding windows, on-the-fly vertex updates
star=****
problem=a system for processing large-scale graphs on a single machine
interest=
hardness=
idea=GridGraph breaks graphs into 1D-partitioned vertex chunks and 2D-partitioned edge blocks using a first fine-grained level partitioning in preprocessing. A second coarsegrained level partitioning is applied in runtime. Through a novel dual sliding windows method, GridGraph can stream the edges and apply on-the-fly vertex updates, thus reduce the I/O amount required for computation.  The partitioning of edges also enable selective scheduling so that some of the blocks can be skipped to reduce unnecessary I/O. This is very effective when the active vertex set shrinks with convergence.
future=
comment=Our evaluation results show that GridGraph scales seamlessly with memory capacity and disk bandwidth, and outperforms state-of-the-art out-of-core systems, including GraphChi and X-Stream. Furthermore, we show that the performance of GridGraph is even competitive with distributed systems, and it also provides significant cost efficiency in cloud environment.
other=https://github.com/thu-pacman/GridGraph  ;  this system has been sold to Alibaba ; the history of graph computing   https://zhuanlan.zhihu.com/p/80455017
---
id=1
title=Analysis and Optimization of the memory hierarchy for graph processing Workloads
author=Abanti Basak
journal=HPCA
year=2019
tags=graph performance model, memory hierarchy, graph processing workload
star=****
problem=
interest=
hardness=
idea=
future=
comment=
other=
---
id=2
title=The Future is Big Graphs! A Community View on Graph Processing Systems
author=sherif sakr, et al
journal=arXiv, CACM
year=2020
tags=vision, graph processing, computer systems, data management, Community view
star=****
problem=What needs to happen in the next decade for big graph processing to continue to succeed?
interest=
hardness=The diversity of models and systems led initially to the fragmentation of the market and a lack of clear direction for the community
idea=abstraction (data model,graph query language), ecosystem (composition of different systems, various workloads), performance (how to define metrics)
future=
comment=
other=
---
id=3
title=Exploring HPC and Big Data Convergence: A Graph Processing Study on Intel Knights Landing
author=Alexandru Uta
journal=IEEE International Conference on Cluster Computing (CLUSTER, CCF B conference of architecture)
year=2018
tags=hpc, big data, Convergence, graph Processing, intel Knights Landing (KNL), Hardware-Platform-Algorithm-Dataset (HPAD) Law
star=****
problem=investigate the convergence of big data and HPC infrastructure for one of the most challenging application domains, the highly irregular graph processing
interest=an understand-first approach, and conducted the first performance study of graph processing (a representative big-data workload)on big-data software platforms running on HPC infrastructure based on KNL (which can run graph processing workloads out-of-the-box). In other words, we investigate KNL as a hardware platform to achieve HPC-big data convergence.
hardness=The current approaches seem build-first, and raise the daunting challenge of solving portability for a broad domain.
idea=the closer the platform is to the hardware, and the less general is its programming model, the better its performance is.   each type of platform interacts differently with the KNL hardware, and requires different types of tuning.
future=
comment=
other=
---
